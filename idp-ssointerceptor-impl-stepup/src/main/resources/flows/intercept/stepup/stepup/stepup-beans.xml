<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

	default-init-method="initialize" default-destroy-method="destroy">

	<bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
		p:placeholderPrefix="%{" p:placeholderSuffix="}" />

	<bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
	<bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

	<!-- REPLACE THESE DUMMIES WITH REAL VALUES -->
	<bean id="stepup" parent="shibboleth.SAML2AuthnContextClassRef"
		c:classRef="urn:test:stepup" />
	<bean id="stepup2" parent="shibboleth.SAML2AuthnContextClassRef"
		c:classRef="urn:test:stepup2" />
	<bean id="password" parent="shibboleth.SAML2AuthnContextClassRef"
		c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
	<bean id="password2" parent="shibboleth.SAML2AuthnContextClassRef"
		c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport2" />

	<bean id="CheckRequestedAuthenticationContext"
		class="fi.csc.idp.stepup.impl.CheckRequestedAuthenticationContext"
		scope="prototype" >
		<property name="stepupMethods">
			<list>
				<ref bean="stepup" />
			</list>
		</property>
	</bean>

	<bean id="CheckProvidedAuthenticationContext"
		class="fi.csc.idp.stepup.impl.CheckProvidedAuthenticationContext"
		scope="prototype"
   	
		
		<property name="trustedStepupMethods">
			<map>
				<entry>
					<key>
						<value>idpentity1t</value>
					</key>
					<value>
						<list>
							<ref bean="stepup" />
							<ref bean="stepup2" />
						</list>
					</value>
				</entry>
			</map>
		</property>
	</bean>



	<bean id="GenerateStepUpChallenge" class="fi.csc.idp.stepup.impl.GenerateStepUpChallenge"
		scope="prototype" >
		<property name="attributeIds">
			<map>
				<entry key-ref="stepup" value="mail" />
			</map>
		</property>
		<property name="challengeSenders">
			<map>
				<entry key-ref="stepup" value-ref="MailChallengeSender" />
				<entry key-ref="stepup2" value-ref="LogChallengeSender" />
			</map>
		</property>
		<property name="challengeGenerators">
			<map>
				<entry key-ref="stepup" value-ref="ChallengeGenerator" />
				<entry key-ref="stepup2" value-ref="ChallengeGenerator" />
			</map>
		</property>
	</bean>

	<bean id="SetRequestedAuthenticationContext"
		class="fi.csc.idp.stepup.impl.SetRequestedAuthenticationContext"
		scope="prototype" >
		<property name="PassThruuEntityLists">
			<!-- Example of case where we use the method provided by idp if the idp 
				is idp.localdomain and the client so is sp1 or sp.localdomain -->
			<map>
				<entry>
					<key>
						<value>idp.localdomain</value>
					</key>
					<list>
						<value>sp1</value>
						<value>sp.localdomain</value>
					</list>
				</entry>
			</map>
		</property>
		<property name="AuthenticationMethodMapping">
			<!-- Example of case where set password2 as method if we receive from 
				idp.localdomain method password and the client is sp.localdomain -->
			<map>
				<entry>
					<key>
						<value>idp.localdomain</value>
					</key>
					<map>
						<entry>
							<key>
								<value>sp.localdomain</value>
							</key>
							<map>
								<entry key-ref="password" value-ref="password2" />
							</map>
						</entry>
					</map>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="VerifyPasswordFromFormRequest" class="fi.csc.idp.stepup.impl.VerifyPasswordFromFormRequest"
		scope="prototype" p:httpServletRequest-ref="shibboleth.HttpServletRequest">
		<property name="challengeVerifiers">
			<map>
				<entry key-ref="stepup2" value-ref="EqualVerifier" />
				<entry key-ref="stepup" value-ref="EqualVerifier" />
			</map>
		</property>
	</bean>

	<bean id="LogChallengeSender" class="fi.csc.idp.stepup.impl.LogChallengeSender"
		scope="prototype">
	</bean>
	
	<bean id="MailChallengeSender"
        class="fi.csc.idp.stepup.impl.MailChallengeSender" scope="prototype"
        p:subjectField="step-up code"
        p:fromField="foo@bar"
        p:host="foo.bar"
        p:port="25"
        p:sMTPAuth="false"
        p:sMTPTtls="true">
     </bean>
	

	<bean id="ChallengeGenerator" class="fi.csc.idp.stepup.impl.DigestChallengeGenerator"
		scope="prototype">
	</bean>


	<bean id="EqualVerifier" class="fi.csc.idp.stepup.impl.EqualChallengeResponseVerifier"
		scope="prototype">
	</bean>

</beans>
