<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize" default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
        p:placeholderSuffix="}" />

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <bean id="InitializeStepUpChallengeContext" class="fi.csc.idp.stepup.impl.InitializeStepUpChallengeContext"
        scope="prototype" p:stepUpMethod-ref="%{stepup.authenticationManager:GoogleAuthStepUpManager}"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="InitializeRegistrationStepUpChallengeContext"
        class="fi.csc.idp.stepup.impl.InitializeStepUpChallengeContext" scope="prototype"
        p:stepUpMethod-ref="%{stepup.registration.authenticationManager:SMSStepUpManager}"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="ValidateStepupAuthentication" class="fi.csc.idp.stepup.impl.ValidateStepupAuthentication"
        scope="prototype" />

    <bean id="AddAccount" class="fi.csc.idp.stepup.impl.AddAccount" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="UpdateAccount" class="fi.csc.idp.stepup.impl.UpdateAccount" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="GenerateStepUpChallenge" class="fi.csc.idp.stepup.impl.GenerateStepUpChallenge" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="VerifyPasswordFromFormRequest" class="fi.csc.idp.stepup.impl.VerifyPasswordFromFormRequest"
        scope="prototype" p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="VerifyResponse" class="fi.csc.idp.stepup.impl.VerifyResponse" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="GoogleAuthStepUpManager" class="fi.csc.idp.stepup.impl.AttributeKeyBasedStorageStepUpAccountManager"
        scope="prototype" p:name="TOTP" p:attributeId="%{stepup.GoogleAuthStepUpManager.keyclaim:INTeppn}"
        p:accountLimit="1" p:autoRemove="true"
        p:stepUpAccountStorage-ref="%{stepup.GoogleAuthStepUpManager.accountstore:ShibStorageAccountStorage}"
        p:accountID="GoogleAuthenticatorStepUpAccount" />

    <bean id="ShibStorageAccountStorage" class="fi.csc.idp.stepup.impl.ShibStorageSingleStepUpAccountStorage"
        p:Storage-ref="shibboleth.StorageService" />

    <!-- Hikari as datasource example -->
    <!-- <bean id="HikariConfig" class="com.zaxxer.hikari.HikariConfig"> <property name="dataSourceProperties"> <props> <prop 
        key="url">jdbc:mariadb://localhost:3306/totp</prop> <prop key="user">foo</prop> <prop key="password">bar</prop> </props> 
        </property> <property name="dataSourceClassName" value="org.mariadb.jdbc.MySQLDataSource" /> </bean> <bean id="GADataSource" 
        class="com.zaxxer.hikari.HikariDataSource"> <constructor-arg ref="HikariConfig" /> </bean> <bean id="MySqlAccountStorage" 
        class="fi.csc.idp.stepup.impl.SQLStepUpAccountStorage" p:dataSource-ref="GADataSource" p:encryptKey="TRUE" p:encryptTarget="TRUE" 
        p:encryptor-ref="GAAccountEncryptor"> <property name="listStatement"> <value> <![CDATA[ SELECT * FROM totp.ga WHERE user=? 
        ]]> </value> </property> <property name="addStatement"> <value> <![CDATA[ INSERT INTO totp.ga (name,enabled,editable,target,user) 
        VALUES(?,?,?,?,?) ]]> </value> </property> <property name="updateStatement"> <value> <![CDATA[ UPDATE totp.ga SET name=?,enabled=?,editable=?,target=?,user=? 
        WHERE id=? ]]> </value> </property> </bean> <bean id="GAAccountEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
        factory-method="queryableText"> <constructor-arg value="foo" /> <constructor-arg value="bar" /> </bean> -->

    <bean id="LogStepUpManager" class="fi.csc.idp.stepup.impl.DefaultStepUpAccountManager" scope="prototype"
        p:name="Logfile" p:AccountID="LogStepUpAccount" />

    <bean id="MailStepUpManager" class="fi.csc.idp.stepup.impl.AttributeTargetBasedStepUpAccountManager"
        scope="prototype" p:name="Email" p:AttributeId="%{stepup.MailStepUpManager.keyclaim:INTmail}"
        p:AccountID="EmailStepUpAccount" />

    <bean id="SMSStepUpManager" class="fi.csc.idp.stepup.impl.AttributeTargetBasedStepUpAccountManager"
        scope="prototype" p:name="SMS Sender" p:AttributeId="%{stepup.SMSStepUpManager.keyclaim:INTmobile}"
        p:AccountID="SMSStepUpAccount" />

    <bean id="SMSReceiverStepUpManager" class="fi.csc.idp.stepup.impl.AttributeTargetBasedStepUpAccountManager"
        scope="prototype" p:name="SMS Receiver" p:AttributeId="%{stepup.SMSReceiverStepUpManager.keyclaim:INTmobile}"
        p:AccountID="SMSReceiverStepUpAccount" />

    <bean id="LogStepUpAccount" class="fi.csc.idp.stepup.impl.ChallengeSenderStepUpAccount" scope="prototype"
        p:ChallengeGenerator-ref="ChallengeGenerator" p:ChallengeVerifier-ref="EqualVerifier"
        p:ChallengeSender-ref="LogChallengeSender" />

    <bean id="EmailStepUpAccount" class="fi.csc.idp.stepup.impl.ChallengeSenderStepUpAccount" scope="prototype"
        p:ChallengeGenerator-ref="ChallengeGenerator" p:ChallengeVerifier-ref="EqualVerifier"
        p:ChallengeSender-ref="MailChallengeSender" />

    <bean id="SMSStepUpAccount" class="fi.csc.idp.stepup.impl.ChallengeSenderStepUpAccount" scope="prototype"
        p:ChallengeGenerator-ref="ChallengeGenerator" p:ChallengeVerifier-ref="EqualVerifier"
        p:ChallengeSender-ref="SMSChallengeSender" p:retryLimit="2" />

    <bean id="SMSReceiverStepUpAccount" class="fi.csc.idp.stepup.impl.TvilioSMSReceiverStepUpAccount"
        scope="prototype" p:ChallengeGenerator-ref="EmptyChallengeGenerator" p:ChallengeVerifier-ref="EqualVerifier"
        p:accountSid="%{stepup.SMSAccount.sid}" p:authToken="%{stepup.SMSAccount.token}" p:numberOfChecks="1"
        p:eventWindow="3600000" p:ChallengeSender-ref="SMSEmptyChallengeSender" />

    <bean id="GoogleAuthenticatorStepUpAccount" class="fi.csc.idp.stepup.impl.GoogleAuthenticatorStepUpAccount"
        scope="prototype" />

    <bean id="LogChallengeSender" class="fi.csc.idp.stepup.impl.LogChallengeSender" />

    <bean id="MailChallengeSender" class="fi.csc.idp.stepup.impl.MailChallengeSender"
        p:subjectField="%{stepup.mail.subject:OTP code}" p:fromField="%{stepup.mail.from:OTP account}"
        p:host="%{stepup.mail.host:localhost}" p:port="%{stepup.mail.port:25}"
        p:templatePath="%{stepup.mail.templatepath}" p:templateFile="%{stepup.mail.templatefile}"
        p:sMTPAuth="%{stepup.mail.smtpauth:false}" p:sMTPTtls="%{stepup.mail.smtpttls:true}" />

    <bean id="SMSChallengeSender" class="fi.csc.idp.stepup.impl.TvilioSMSChallengeSender"
        p:senderNumber="%{stepup.SMSAccount.sender}" p:accountSid="%{stepup.SMSAccount.sid}"
        p:authToken="%{stepup.SMSAccount.token}" p:message="The code to access the service is %s, reply with the code" />

    <bean id="SMSEmptyChallengeSender" class="fi.csc.idp.stepup.impl.TvilioSMSChallengeSender"
        p:senderNumber="%{stepup.SMSAccount.sender}" p:accountSid="%{stepup.SMSAccount.sid}"
        p:authToken="%{stepup.SMSAccount.token}" p:message="Please reply to this message to gain access to service." />

    <bean id="ChallengeGenerator" class="fi.csc.idp.stepup.impl.DigestChallengeGenerator" p:decimal="true" />

    <bean id="EmptyChallengeGenerator" class="fi.csc.idp.stepup.impl.DigestChallengeGenerator" p:maxLength="0" />

    <bean id="OneCharChallengeGenerator" class="fi.csc.idp.stepup.impl.DigestChallengeGenerator" p:maxLength="1" />

    <bean id="EqualVerifier" class="fi.csc.idp.stepup.impl.EqualChallengeResponseVerifier" />

</beans>
